name: Build

on:
  push:
    paths:
      - '.github/workflows/build.yml'
      - 'src-tauri/**/*'
      - 'src/**/*'
  pull_request:
    paths:
      - '.github/workflows/build.yml'
      - 'src-tauri/**/*'
      - 'src/**/*'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-win:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install deps and build
        run: yarn && yarn build &&  yarn tauri build

      # Move built to its  own folder for compression
      - name: Move build
        run: mkdir src-tauri/target/release/artifacts && move src-tauri/target/release/*.exe src-tauri/target/release/artifacts && move src-tauri/target/release/html src-tauri/target/release/artifacts/html && move src-tauri/target/release/injection src-tauri/target/release/artifacts/injection && move src-tauri/target/release/icons src-tauri/target/release/artifacts/icons

      - name: Compress build
        uses: ksm2/archive-action@v1
        with:
          root-directory: src-tauri/target/release/artifacts
          format: "zip"
          name: "Dorion"

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: Dorion_Win64_Portable.zip
          path: Dorion.zip

      - name: Upload MSI
        uses: actions/upload-artifact@v3
        with:
          name: Dorion_Win64.msi
          path: src-tauri/target/release/bundle/msi/*.msi

  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install libraries
        run: sudo apt update && sudo apt install libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Install deps and build
        run: yarn && yarn build &&  yarn tauri build

      # Move built to its  own folder for compression
      - name: Move build
        run: mkdir src-tauri/target/release/artifacts && mv src-tauri/target/release/dorion src-tauri/target/release/artifacts/dorion && mv src-tauri/target/release/html src-tauri/target/release/artifacts/html && mv src-tauri/target/release/injection src-tauri/target/release/artifacts/injection && mv src-tauri/target/release/icons src-tauri/target/release/artifacts/icons

      # Zip artifact folder
      - name: Compress build
        run: zip -r Dorion.zip src-tauri/target/release/artifacts

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: Dorion_Amd64_Portable.zip
          path: Dorion.zip

      # Upload deb
      - name: Upload deb
        uses: actions/upload-artifact@v3
        with:
          name: Dorion_Amd64.deb
          path: src-tauri/target/release/bundle/deb/*.deb

      # Upload AppImage
      - name: Upload AppImage
        uses: actions/upload-artifact@v3
        with:
          name: Dorion_Amd64.AppImage
          path: src-tauri/target/release/bundle/appimage/*.AppImage
  
  # build-macos:
  #   runs-on: macos-12
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16

  #     - name: Install Rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable

  #     # Add arch target
  #     - name: Add arch64 target
  #       run: rustup target add aarch64-apple-darwin

  #     - name: Install deps and build
  #       run: yarn && yarn build &&  yarn tauri build --target universal-apple-darwin

  #     - name: Make dirs
  #       run: mkdir src-tauri/target/release/artifacts && mkdir src-tauri/target/release/artifacts/injection && mkdir src-tauri/target/release/artifacts/icons && mkdir src-tauri/target/release/artifacts/html

  #     # Move built to its  own folder for compression
  #     - name: Move build
  #       run: mv src-tauri/html src-tauri/target/release/artifacts/s && mv src-tauri/injection/*_min.js src-tauri/target/release/artifacts/ && mv src-tauri/icons src-tauri/target/release/artifacts/

  #     # Zip artifact folder
  #     - name: Compress build
  #       run: zip -r Dorion.zip src-tauri/target/release/

  #     - name: Upload build
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: Dorion_MacOS_Portable.zip
  #         path: Dorion.zip

  #     # Upload dmg
  #     - name: Upload dmg
  #       uses: actions/upload-artifact@v3
  #       with:
  #         path: src-tauri/target/release/bundle/dmg/*.dmg
